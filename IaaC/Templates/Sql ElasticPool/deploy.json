{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "sqlservername": {
      "type": "string",
      "metadata": {
        "description": "The SQL Server name."
      }
    },
    "sqlElasticPoolName": {
      "type": "string",
      "metadata": {
        "description": "The Elastic Pool name."
      }
    },
    "databases": {
      "type": "array",
      "metadata": {
        "description": "The SQL Databases names."
      },
      "defaultValue": []
    },
    "edition": {
      "type": "string",
      "allowedValues": [
        "Basic",
        "Standard",
        "Premium",
        "GP_Gen5",
        "BC_Gen5"
      ],
      "metadata": {
        "description": "The Elastic Pool edition."
      }
    },
    "capacity": {
      "type": "int",
      "metadata": {
        "description": "The Elastic Pool DTU or number of vcore."
      }
    },
    "databaseCapacityMin": {
      "type": "int",
      "metadata": {
        "description": "The Elastic Pool database capacity min."
      },
      "defaultValue": 0
    },
    "databaseCapacityMax": {
      "type": "int",
      "metadata": {
        "description": "The Elastic Pool database capacity max."
      },
      "defaultValue": 5
    },
    "databaseCollation": {
      "type": "string",
      "metadata": {
        "description": "The SQL Database collation."
      },
      "defaultValue": "SQL_Latin1_General_CP1_CI_AS"
    },
    "resourcelocation": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    },
    "zoonreductant": {
      "type": "bool",
      "metadata": {
        "description": "Whether or not this elastic pool is zone redundant, which means the replicas of this elastic pool will be spread across multiple availability zones."
      },
      "defaultValue": false
    },
    "license": {
      "type": "string",
      "metadata": {
        "description": "The license type to apply for this elastic pool."
      },
      "allowedValues": [ "LicenseIncluded", "BasePrice" ],
      "defaultValue": "LicenseIncluded"
    }
  },
  "variables": {
    "editionToSkuMap": {
      "Basic": {
        "family": null,
        "name": "BasicPool",
        "tier": "Basic",
        "databaseCapacityMax": 5,
        "databaseCapacityMin": 0,
        "capacity": 50
      },
      "Standard": {
        "family": null,
        "name": "StandardPool",
        "tier": "Standard",
        "databaseCapacityMax": 5,
        "databaseCapacityMin": 0
      },
      "Premium": {
        "family": null,
        "name": "PremiumPool",
        "tier": "Premium",
        "databaseCapacityMax": 5,
        "databaseCapacityMin": 0
      },
      "GP_Gen5": {
        "family": "Gen5",
        "name": "GP_Gen5",
        "tier": "GeneralPurpose",
        "databaseCapacityMax": 5,
        "databaseCapacityMin": 0
      },
      "BC_Gen5": {
        "family": "Gen5",
        "name": "BC_Gen5",
        "tier": "BusinessCritical",
        "databaseCapacityMax": 5,
        "databaseCapacityMin": 0
      }
    },
    "skuName": "[variables('editionToSkuMap')[parameters('edition')].name]",
    "skuTier": "[variables('editionToSkuMap')[parameters('edition')].tier]",
    "skuFamily": "[variables('editionToSkuMap')[parameters('edition')].family]",
    "dbCapacitymin": "[variables('editionToSkuMap')[parameters('edition')].databaseCapacityMin]",
    "dbCapacitymax": "[variables('editionToSkuMap')[parameters('edition')].databaseCapacityMin]"
  },
  "resources": [
    {
      "type": "Microsoft.Sql/servers/elasticPools",
      "apiVersion": "2020-08-01-preview",
      "location": "[parameters('resourcelocation')]",
      "name": "[concat(parameters('sqlservername'), '/', parameters('sqlElasticPoolName'))]",
      "sku": {
        "name": "[variables('skuName')]",
        "tier": "[variables('skuTier')]",
        "family": "[variables('skuFamily')]",
        "capacity": "[parameters('capacity')]"
      },
      "properties": {
        "perDatabaseSettings": {
          // "minCapacity": "[variables('dbCapacitymin')]",
          // "maxCapacity": "[variables('dbCapacitymax')]"
        },
        "zoneRedundant": "[parameters('zoonreductant')]",
        "licenseType": "[parameters('license')]"
      }
    },
    {
      "condition": "[greater(length(parameters('databases')),0)]",
      "type": "Microsoft.Sql/servers/databases",
      "name": "[if(greater(length(parameters('databases')),0),concat(parameters('sqlservername'),'/',parameters('databases')[copyIndex()]),'dummySql/dummyDb')]",
      "location": "[parameters('resourcelocation')]",
      "apiVersion": "2020-08-01-preview",
      "sku": {
        "name": "ElasticPool",
        "tier": "[variables('skuTier')]",
        "capacity": 0
      },
      "properties": {
        "collation": "[parameters('databaseCollation')]",
        "elasticPoolId": "[resourceId('Microsoft.Sql/servers/elasticpools', parameters('sqlservername'), parameters('sqlElasticPoolName'))]"
      },
      "copy": {
        "name": "addDatabasesInElasticPool",
        "count": "[length(parameters('databases'))]"
      }
    }
  ],
  "outputs": {
    "sqlElasticPoolResourceId": {
      "type": "object",
      //"value": "[resourceId('Microsoft.Sql/servers/elasticPools',parameters('sqlservername'),parameters('sqlElasticPoolName'))]",
      "value": "[reference(concat('Microsoft.Sql/servers/',parameters('sqlservername'),'/elasticPools/',parameters('sqlElasticPoolName')),'2014-04-01','Full')]"
    }
  }
}